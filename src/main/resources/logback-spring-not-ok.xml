<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="120 seconds">
	<springProperty scope="context" name="LOG_PATH" source="logging.path"/>
	<springProperty scope="context" name="LOG_FILE" source="logging.file.name"/>
	<springProperty scope="context" name="LOG_FILE_PATTERN" source="logging.pattern.rolling-file-name"/>
	<springProperty scope="context" name="LOG_FILE_MAX_SIZE" source="logging.file.max-size"/>
	<springProperty scope="context" name="LOG_FILE_MAX_HISTORY" source="logging.file.max-history"/>
	<springProperty scope="context" name="LOG_FILE_SIZE_CAP" source="logging.file.total-size-cap"/>
	<!-- Define a property from application.properties or environment -->
	<springProperty scope="context" name="LOG_FORMAT" source="logging.format"/>


	<!-- Define the Standard Output - Console Loggin -->
	<appender name="STDOUT_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} |%-5level| %logger{36}:%L |IP=%X{IP}:%X{Port} |User=%X{user}| |ReqID=%X{ReqId} |%msg%n</pattern>
		</encoder>
	</appender>

	<!-- Define the File Logging -->
	<appender name="STDOUT_TEXT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE}</file>
		<!-- <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"> -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
		<!-- Combines size-based rolling and time-based rolling -->
			<fileNamePattern>${LOG_FILE_PATTERN}</fileNamePattern>
			<!-- Specify max size of a single log file -->
			<maxFileSize>${LOG_FILE_MAX_SIZE}</maxFileSize>
			<!-- Retain log history for a specific number of days -->
			<maxHistory>${LOG_FILE_MAX_HISTORY}</maxHistory>
			<!-- Specify file size Cap -->
			<totalSizeCap>${LOG_FILE_SIZE_CAP}</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} |Service=%X{Service} |%-5level| %logger{36}:%L |IP=%X{IP}:%X{Port}| Proto=%X{Protocol}| URI=%X{URI}| User=%X{user}| ReqID=%X{ReqId}| %msg%n</pattern>
		</encoder>
	</appender>

	<!-- Define JSON file appender -->
	<appender name="STDOUT_JSON" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
	</appender>

	<!-- Conditionally include either text or JSON appender based on the value of logging.format -->
	<springProfile name="!json">
		<root level="INFO">
			<appender-ref ref="STDOUT_TEXT"/>
		</root>
		<logger level="info" name="ms-service-info">
			<appender-ref ref="STDOUT_TEXT"/>
		</logger>
		<logger level="debug" name="ms-service-debug">
			<appender-ref ref="STDOUT_TEXT"/>
		</logger>
	</springProfile>

	<springProfile name="json">
		<root level="INFO">
			<appender-ref ref="STDOUT_JSON"/>
		</root>
		<logger level="info" name="ms-service-info">
			<appender-ref ref="STDOUT_JSON"/>
		</logger>
		<logger level="debug" name="ms-service-debug">
			<appender-ref ref="STDOUT_JSON"/>
		</logger>
	</springProfile>

	<!-- Define the Loggers -->
	<root level="INFO">
		<appender-ref ref="STDOUT_CONSOLE" />
	</root>
	<logger name="org.springframework.boot.web.embedded.tomcat.TomcatWebServer" level="warn">
		<appender-ref ref="STDOUT_CONSOLE" />
	</logger>
	<logger level="info" name="ms-service-info">
		<appender-ref ref="STDOUT_CONSOLE" />
	</logger>
	<logger level="debug" name="ms-service-debug">
		<appender-ref ref="STDOUT_CONSOLE" />
	</logger>

</configuration>
