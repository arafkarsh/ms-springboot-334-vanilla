Signature verification Must fail now.
# X.509

X.509 is a standard that defines the format of public key certificates. It's used within 
the context of public key infrastructures, which provide a way of encrypting or securing 
user data. 

## A certificate typically includes:

Subject: The entity's name that the certificate represents.
Issuer: The entity that verified the information and issued the certificate.
Validity Period: The date range during which the certificate is valid.
Public Key: The public key of the entity.
Signature Algorithm: The algorithm used to create the certificate's signature.
Signature: A signature that can be used to verify that the certificate has not been altered.

# Java Keytool
Java Keytool is a key and certificate management utility. It enables users to administer their 
own public/private key pairs and associated certificates for use in self-authentication. Here's 
how to create an X.509 certificate using Java Keytool:

Java Keytool supports both the propritery format of JKS and Open Standard pkcs12

## 1. CER Format (.cer file extension)
CER is a file extension for an SSL certificate file format. The .cer file can contain a single 
certificate or multiple certificates, and it can be encoded in different ways.

Binary Encoding (DER): If a .cer file is in binary DER format, it is exactly the same as a .der 
file (explained below). This is a widely supported binary format.

Base64 Encoding (PEM): A .cer file can also be encoded in PEM format, which is a Base64 encoded 
version of the DER format, with additional header and footer lines. This format is human-readable 
and commonly used.

In practice, the .cer extension doesn't definitively specify the file's encoding, so it could be 
in either DER or PEM format. The actual encoding would depend on the tool or context in which the 
file was created.

## 2. DER Format (.der file extension)
DER (Distinguished Encoding Rules) is a binary format for data structures described by ASN.1. In 
the context of certificates:

Binary Encoding: DER files are binary and not human-readable. They are used to store a single 
certificate, not a chain of certificates.

Efficiency: DER encoding is more space-efficient, making the file size smaller.

Compatibility: DER is widely supported and recognized by many systems and applications.

## Conclusion
.cer Format: Depending on the context, a .cer file could be encoded in either DER or PEM format. 
It is more flexible but may require knowing or specifying the encoding when used.

.der Format: A .der file is specifically in DER binary format. It's a compact and widely supported 
way to represent a single certificate.

In the commands you provided, the file extensions alone don't determine the encoding. The keytool 
command will export the certificate in DER format by default, regardless of the file extension. 
If you want to export it in PEM format, additional options or tools may be required.
